// Code generated by go-swagger; DO NOT EDIT.

package bookings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetBookingsByDateTimeParams creates a new GetBookingsByDateTimeParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetBookingsByDateTimeParams() *GetBookingsByDateTimeParams {
	return &GetBookingsByDateTimeParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetBookingsByDateTimeParamsWithTimeout creates a new GetBookingsByDateTimeParams object
// with the ability to set a timeout on a request.
func NewGetBookingsByDateTimeParamsWithTimeout(timeout time.Duration) *GetBookingsByDateTimeParams {
	return &GetBookingsByDateTimeParams{
		timeout: timeout,
	}
}

// NewGetBookingsByDateTimeParamsWithContext creates a new GetBookingsByDateTimeParams object
// with the ability to set a context for a request.
func NewGetBookingsByDateTimeParamsWithContext(ctx context.Context) *GetBookingsByDateTimeParams {
	return &GetBookingsByDateTimeParams{
		Context: ctx,
	}
}

// NewGetBookingsByDateTimeParamsWithHTTPClient creates a new GetBookingsByDateTimeParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetBookingsByDateTimeParamsWithHTTPClient(client *http.Client) *GetBookingsByDateTimeParams {
	return &GetBookingsByDateTimeParams{
		HTTPClient: client,
	}
}

/*
GetBookingsByDateTimeParams contains all the parameters to send to the API endpoint

	for the get bookings by date time operation.

	Typically these are written to a http.Request.
*/
type GetBookingsByDateTimeParams struct {

	/* DateTime.

	   Date and time for filtering bookings
	*/
	DateTime string

	/* UserID.

	   User ID for filtering bookings
	*/
	UserID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get bookings by date time params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetBookingsByDateTimeParams) WithDefaults() *GetBookingsByDateTimeParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get bookings by date time params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetBookingsByDateTimeParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get bookings by date time params
func (o *GetBookingsByDateTimeParams) WithTimeout(timeout time.Duration) *GetBookingsByDateTimeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get bookings by date time params
func (o *GetBookingsByDateTimeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get bookings by date time params
func (o *GetBookingsByDateTimeParams) WithContext(ctx context.Context) *GetBookingsByDateTimeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get bookings by date time params
func (o *GetBookingsByDateTimeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get bookings by date time params
func (o *GetBookingsByDateTimeParams) WithHTTPClient(client *http.Client) *GetBookingsByDateTimeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get bookings by date time params
func (o *GetBookingsByDateTimeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDateTime adds the dateTime to the get bookings by date time params
func (o *GetBookingsByDateTimeParams) WithDateTime(dateTime string) *GetBookingsByDateTimeParams {
	o.SetDateTime(dateTime)
	return o
}

// SetDateTime adds the dateTime to the get bookings by date time params
func (o *GetBookingsByDateTimeParams) SetDateTime(dateTime string) {
	o.DateTime = dateTime
}

// WithUserID adds the userID to the get bookings by date time params
func (o *GetBookingsByDateTimeParams) WithUserID(userID int64) *GetBookingsByDateTimeParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the get bookings by date time params
func (o *GetBookingsByDateTimeParams) SetUserID(userID int64) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *GetBookingsByDateTimeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param dateTime
	qrDateTime := o.DateTime
	qDateTime := qrDateTime
	if qDateTime != "" {

		if err := r.SetQueryParam("dateTime", qDateTime); err != nil {
			return err
		}
	}

	// query param userID
	qrUserID := o.UserID
	qUserID := swag.FormatInt64(qrUserID)
	if qUserID != "" {

		if err := r.SetQueryParam("userID", qUserID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
