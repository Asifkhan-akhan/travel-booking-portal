// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"travel-booking-portal/gen/models"
)

// CreateOrUpdateCarReader is a Reader for the CreateOrUpdateCar structure.
type CreateOrUpdateCarReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateOrUpdateCarReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateOrUpdateCarCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 409:
		result := NewCreateOrUpdateCarConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateOrUpdateCarInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /car] CreateOrUpdateCar", response, response.Code())
	}
}

// NewCreateOrUpdateCarCreated creates a CreateOrUpdateCarCreated with default headers values
func NewCreateOrUpdateCarCreated() *CreateOrUpdateCarCreated {
	return &CreateOrUpdateCarCreated{}
}

/*
CreateOrUpdateCarCreated describes a response with status code 201, with default header values.

CarRental added successfully
*/
type CreateOrUpdateCarCreated struct {
	Payload *models.CarRental
}

// IsSuccess returns true when this create or update car created response has a 2xx status code
func (o *CreateOrUpdateCarCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create or update car created response has a 3xx status code
func (o *CreateOrUpdateCarCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create or update car created response has a 4xx status code
func (o *CreateOrUpdateCarCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create or update car created response has a 5xx status code
func (o *CreateOrUpdateCarCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create or update car created response a status code equal to that given
func (o *CreateOrUpdateCarCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create or update car created response
func (o *CreateOrUpdateCarCreated) Code() int {
	return 201
}

func (o *CreateOrUpdateCarCreated) Error() string {
	return fmt.Sprintf("[POST /car][%d] createOrUpdateCarCreated  %+v", 201, o.Payload)
}

func (o *CreateOrUpdateCarCreated) String() string {
	return fmt.Sprintf("[POST /car][%d] createOrUpdateCarCreated  %+v", 201, o.Payload)
}

func (o *CreateOrUpdateCarCreated) GetPayload() *models.CarRental {
	return o.Payload
}

func (o *CreateOrUpdateCarCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CarRental)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOrUpdateCarConflict creates a CreateOrUpdateCarConflict with default headers values
func NewCreateOrUpdateCarConflict() *CreateOrUpdateCarConflict {
	return &CreateOrUpdateCarConflict{}
}

/*
CreateOrUpdateCarConflict describes a response with status code 409, with default header values.

CarRental already exists
*/
type CreateOrUpdateCarConflict struct {
}

// IsSuccess returns true when this create or update car conflict response has a 2xx status code
func (o *CreateOrUpdateCarConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create or update car conflict response has a 3xx status code
func (o *CreateOrUpdateCarConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create or update car conflict response has a 4xx status code
func (o *CreateOrUpdateCarConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create or update car conflict response has a 5xx status code
func (o *CreateOrUpdateCarConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create or update car conflict response a status code equal to that given
func (o *CreateOrUpdateCarConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create or update car conflict response
func (o *CreateOrUpdateCarConflict) Code() int {
	return 409
}

func (o *CreateOrUpdateCarConflict) Error() string {
	return fmt.Sprintf("[POST /car][%d] createOrUpdateCarConflict ", 409)
}

func (o *CreateOrUpdateCarConflict) String() string {
	return fmt.Sprintf("[POST /car][%d] createOrUpdateCarConflict ", 409)
}

func (o *CreateOrUpdateCarConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateOrUpdateCarInternalServerError creates a CreateOrUpdateCarInternalServerError with default headers values
func NewCreateOrUpdateCarInternalServerError() *CreateOrUpdateCarInternalServerError {
	return &CreateOrUpdateCarInternalServerError{}
}

/*
CreateOrUpdateCarInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateOrUpdateCarInternalServerError struct {
}

// IsSuccess returns true when this create or update car internal server error response has a 2xx status code
func (o *CreateOrUpdateCarInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create or update car internal server error response has a 3xx status code
func (o *CreateOrUpdateCarInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create or update car internal server error response has a 4xx status code
func (o *CreateOrUpdateCarInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create or update car internal server error response has a 5xx status code
func (o *CreateOrUpdateCarInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create or update car internal server error response a status code equal to that given
func (o *CreateOrUpdateCarInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create or update car internal server error response
func (o *CreateOrUpdateCarInternalServerError) Code() int {
	return 500
}

func (o *CreateOrUpdateCarInternalServerError) Error() string {
	return fmt.Sprintf("[POST /car][%d] createOrUpdateCarInternalServerError ", 500)
}

func (o *CreateOrUpdateCarInternalServerError) String() string {
	return fmt.Sprintf("[POST /car][%d] createOrUpdateCarInternalServerError ", 500)
}

func (o *CreateOrUpdateCarInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
