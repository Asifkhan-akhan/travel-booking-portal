// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteRoomParams creates a new DeleteRoomParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteRoomParams() *DeleteRoomParams {
	return &DeleteRoomParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteRoomParamsWithTimeout creates a new DeleteRoomParams object
// with the ability to set a timeout on a request.
func NewDeleteRoomParamsWithTimeout(timeout time.Duration) *DeleteRoomParams {
	return &DeleteRoomParams{
		timeout: timeout,
	}
}

// NewDeleteRoomParamsWithContext creates a new DeleteRoomParams object
// with the ability to set a context for a request.
func NewDeleteRoomParamsWithContext(ctx context.Context) *DeleteRoomParams {
	return &DeleteRoomParams{
		Context: ctx,
	}
}

// NewDeleteRoomParamsWithHTTPClient creates a new DeleteRoomParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteRoomParamsWithHTTPClient(client *http.Client) *DeleteRoomParams {
	return &DeleteRoomParams{
		HTTPClient: client,
	}
}

/*
DeleteRoomParams contains all the parameters to send to the API endpoint

	for the delete room operation.

	Typically these are written to a http.Request.
*/
type DeleteRoomParams struct {

	/* RoomID.

	   ID of the Room to delete
	*/
	RoomID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete room params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteRoomParams) WithDefaults() *DeleteRoomParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete room params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteRoomParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete room params
func (o *DeleteRoomParams) WithTimeout(timeout time.Duration) *DeleteRoomParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete room params
func (o *DeleteRoomParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete room params
func (o *DeleteRoomParams) WithContext(ctx context.Context) *DeleteRoomParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete room params
func (o *DeleteRoomParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete room params
func (o *DeleteRoomParams) WithHTTPClient(client *http.Client) *DeleteRoomParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete room params
func (o *DeleteRoomParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRoomID adds the roomID to the delete room params
func (o *DeleteRoomParams) WithRoomID(roomID int64) *DeleteRoomParams {
	o.SetRoomID(roomID)
	return o
}

// SetRoomID adds the roomId to the delete room params
func (o *DeleteRoomParams) SetRoomID(roomID int64) {
	o.RoomID = roomID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteRoomParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param roomID
	if err := r.SetPathParam("roomID", swag.FormatInt64(o.RoomID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
