// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewSearchBookingParams creates a new SearchBookingParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSearchBookingParams() *SearchBookingParams {
	return &SearchBookingParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSearchBookingParamsWithTimeout creates a new SearchBookingParams object
// with the ability to set a timeout on a request.
func NewSearchBookingParamsWithTimeout(timeout time.Duration) *SearchBookingParams {
	return &SearchBookingParams{
		timeout: timeout,
	}
}

// NewSearchBookingParamsWithContext creates a new SearchBookingParams object
// with the ability to set a context for a request.
func NewSearchBookingParamsWithContext(ctx context.Context) *SearchBookingParams {
	return &SearchBookingParams{
		Context: ctx,
	}
}

// NewSearchBookingParamsWithHTTPClient creates a new SearchBookingParams object
// with the ability to set a custom HTTPClient for a request.
func NewSearchBookingParamsWithHTTPClient(client *http.Client) *SearchBookingParams {
	return &SearchBookingParams{
		HTTPClient: client,
	}
}

/*
SearchBookingParams contains all the parameters to send to the API endpoint

	for the search booking operation.

	Typically these are written to a http.Request.
*/
type SearchBookingParams struct {

	/* DateString.

	   Date string to search for bookings (e.g., '2023-10-27')
	*/
	DateString string

	/* UserID.

	   ID of the User to search bookings for
	*/
	UserID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the search booking params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SearchBookingParams) WithDefaults() *SearchBookingParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the search booking params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SearchBookingParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the search booking params
func (o *SearchBookingParams) WithTimeout(timeout time.Duration) *SearchBookingParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the search booking params
func (o *SearchBookingParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the search booking params
func (o *SearchBookingParams) WithContext(ctx context.Context) *SearchBookingParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the search booking params
func (o *SearchBookingParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the search booking params
func (o *SearchBookingParams) WithHTTPClient(client *http.Client) *SearchBookingParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the search booking params
func (o *SearchBookingParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDateString adds the dateString to the search booking params
func (o *SearchBookingParams) WithDateString(dateString string) *SearchBookingParams {
	o.SetDateString(dateString)
	return o
}

// SetDateString adds the dateString to the search booking params
func (o *SearchBookingParams) SetDateString(dateString string) {
	o.DateString = dateString
}

// WithUserID adds the userID to the search booking params
func (o *SearchBookingParams) WithUserID(userID int64) *SearchBookingParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the search booking params
func (o *SearchBookingParams) SetUserID(userID int64) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *SearchBookingParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param dateString
	qrDateString := o.DateString
	qDateString := qrDateString
	if qDateString != "" {

		if err := r.SetQueryParam("dateString", qDateString); err != nil {
			return err
		}
	}

	// query param userID
	qrUserID := o.UserID
	qUserID := swag.FormatInt64(qrUserID)
	if qUserID != "" {

		if err := r.SetQueryParam("userID", qUserID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
