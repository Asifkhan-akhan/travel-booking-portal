// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"travel-booking-portal/gen/models"
)

// UpdateCarReader is a Reader for the UpdateCar structure.
type UpdateCarReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCarReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUpdateCarCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewUpdateCarNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateCarInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /car] UpdateCar", response, response.Code())
	}
}

// NewUpdateCarCreated creates a UpdateCarCreated with default headers values
func NewUpdateCarCreated() *UpdateCarCreated {
	return &UpdateCarCreated{}
}

/*
UpdateCarCreated describes a response with status code 201, with default header values.

CarRental updated successfully
*/
type UpdateCarCreated struct {
	Payload *models.CarRental
}

// IsSuccess returns true when this update car created response has a 2xx status code
func (o *UpdateCarCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update car created response has a 3xx status code
func (o *UpdateCarCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update car created response has a 4xx status code
func (o *UpdateCarCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update car created response has a 5xx status code
func (o *UpdateCarCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update car created response a status code equal to that given
func (o *UpdateCarCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update car created response
func (o *UpdateCarCreated) Code() int {
	return 201
}

func (o *UpdateCarCreated) Error() string {
	return fmt.Sprintf("[PUT /car][%d] updateCarCreated  %+v", 201, o.Payload)
}

func (o *UpdateCarCreated) String() string {
	return fmt.Sprintf("[PUT /car][%d] updateCarCreated  %+v", 201, o.Payload)
}

func (o *UpdateCarCreated) GetPayload() *models.CarRental {
	return o.Payload
}

func (o *UpdateCarCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CarRental)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCarNotFound creates a UpdateCarNotFound with default headers values
func NewUpdateCarNotFound() *UpdateCarNotFound {
	return &UpdateCarNotFound{}
}

/*
UpdateCarNotFound describes a response with status code 404, with default header values.

CarRental not found
*/
type UpdateCarNotFound struct {
}

// IsSuccess returns true when this update car not found response has a 2xx status code
func (o *UpdateCarNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update car not found response has a 3xx status code
func (o *UpdateCarNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update car not found response has a 4xx status code
func (o *UpdateCarNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update car not found response has a 5xx status code
func (o *UpdateCarNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update car not found response a status code equal to that given
func (o *UpdateCarNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update car not found response
func (o *UpdateCarNotFound) Code() int {
	return 404
}

func (o *UpdateCarNotFound) Error() string {
	return fmt.Sprintf("[PUT /car][%d] updateCarNotFound ", 404)
}

func (o *UpdateCarNotFound) String() string {
	return fmt.Sprintf("[PUT /car][%d] updateCarNotFound ", 404)
}

func (o *UpdateCarNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCarInternalServerError creates a UpdateCarInternalServerError with default headers values
func NewUpdateCarInternalServerError() *UpdateCarInternalServerError {
	return &UpdateCarInternalServerError{}
}

/*
UpdateCarInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateCarInternalServerError struct {
}

// IsSuccess returns true when this update car internal server error response has a 2xx status code
func (o *UpdateCarInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update car internal server error response has a 3xx status code
func (o *UpdateCarInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update car internal server error response has a 4xx status code
func (o *UpdateCarInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update car internal server error response has a 5xx status code
func (o *UpdateCarInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update car internal server error response a status code equal to that given
func (o *UpdateCarInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update car internal server error response
func (o *UpdateCarInternalServerError) Code() int {
	return 500
}

func (o *UpdateCarInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /car][%d] updateCarInternalServerError ", 500)
}

func (o *UpdateCarInternalServerError) String() string {
	return fmt.Sprintf("[PUT /car][%d] updateCarInternalServerError ", 500)
}

func (o *UpdateCarInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
