// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"travel-booking-portal/gen/models"
)

// UpdateUserReader is a Reader for the UpdateUser structure.
type UpdateUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUpdateUserCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewUpdateUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /user] UpdateUser", response, response.Code())
	}
}

// NewUpdateUserCreated creates a UpdateUserCreated with default headers values
func NewUpdateUserCreated() *UpdateUserCreated {
	return &UpdateUserCreated{}
}

/*
UpdateUserCreated describes a response with status code 201, with default header values.

User updated successfully
*/
type UpdateUserCreated struct {
	Payload *models.User
}

// IsSuccess returns true when this update user created response has a 2xx status code
func (o *UpdateUserCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update user created response has a 3xx status code
func (o *UpdateUserCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user created response has a 4xx status code
func (o *UpdateUserCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update user created response has a 5xx status code
func (o *UpdateUserCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update user created response a status code equal to that given
func (o *UpdateUserCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update user created response
func (o *UpdateUserCreated) Code() int {
	return 201
}

func (o *UpdateUserCreated) Error() string {
	return fmt.Sprintf("[PUT /user][%d] updateUserCreated  %+v", 201, o.Payload)
}

func (o *UpdateUserCreated) String() string {
	return fmt.Sprintf("[PUT /user][%d] updateUserCreated  %+v", 201, o.Payload)
}

func (o *UpdateUserCreated) GetPayload() *models.User {
	return o.Payload
}

func (o *UpdateUserCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserNotFound creates a UpdateUserNotFound with default headers values
func NewUpdateUserNotFound() *UpdateUserNotFound {
	return &UpdateUserNotFound{}
}

/*
UpdateUserNotFound describes a response with status code 404, with default header values.

User already exists
*/
type UpdateUserNotFound struct {
}

// IsSuccess returns true when this update user not found response has a 2xx status code
func (o *UpdateUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update user not found response has a 3xx status code
func (o *UpdateUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user not found response has a 4xx status code
func (o *UpdateUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update user not found response has a 5xx status code
func (o *UpdateUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update user not found response a status code equal to that given
func (o *UpdateUserNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update user not found response
func (o *UpdateUserNotFound) Code() int {
	return 404
}

func (o *UpdateUserNotFound) Error() string {
	return fmt.Sprintf("[PUT /user][%d] updateUserNotFound ", 404)
}

func (o *UpdateUserNotFound) String() string {
	return fmt.Sprintf("[PUT /user][%d] updateUserNotFound ", 404)
}

func (o *UpdateUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUserInternalServerError creates a UpdateUserInternalServerError with default headers values
func NewUpdateUserInternalServerError() *UpdateUserInternalServerError {
	return &UpdateUserInternalServerError{}
}

/*
UpdateUserInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateUserInternalServerError struct {
}

// IsSuccess returns true when this update user internal server error response has a 2xx status code
func (o *UpdateUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update user internal server error response has a 3xx status code
func (o *UpdateUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user internal server error response has a 4xx status code
func (o *UpdateUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update user internal server error response has a 5xx status code
func (o *UpdateUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update user internal server error response a status code equal to that given
func (o *UpdateUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update user internal server error response
func (o *UpdateUserInternalServerError) Code() int {
	return 500
}

func (o *UpdateUserInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /user][%d] updateUserInternalServerError ", 500)
}

func (o *UpdateUserInternalServerError) String() string {
	return fmt.Sprintf("[PUT /user][%d] updateUserInternalServerError ", 500)
}

func (o *UpdateUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
