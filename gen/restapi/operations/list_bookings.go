// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListBookingsHandlerFunc turns a function with the right signature into a list bookings handler
type ListBookingsHandlerFunc func(ListBookingsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListBookingsHandlerFunc) Handle(params ListBookingsParams) middleware.Responder {
	return fn(params)
}

// ListBookingsHandler interface for that can handle valid list bookings params
type ListBookingsHandler interface {
	Handle(ListBookingsParams) middleware.Responder
}

// NewListBookings creates a new http.Handler for the list bookings operation
func NewListBookings(ctx *middleware.Context, handler ListBookingsHandler) *ListBookings {
	return &ListBookings{Context: ctx, Handler: handler}
}

/*
	ListBookings swagger:route GET /booking listBookings

ListBookings list bookings API
*/
type ListBookings struct {
	Context *middleware.Context
	Handler ListBookingsHandler
}

func (o *ListBookings) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewListBookingsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
