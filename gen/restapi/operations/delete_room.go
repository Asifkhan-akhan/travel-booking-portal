// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteRoomHandlerFunc turns a function with the right signature into a delete room handler
type DeleteRoomHandlerFunc func(DeleteRoomParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteRoomHandlerFunc) Handle(params DeleteRoomParams) middleware.Responder {
	return fn(params)
}

// DeleteRoomHandler interface for that can handle valid delete room params
type DeleteRoomHandler interface {
	Handle(DeleteRoomParams) middleware.Responder
}

// NewDeleteRoom creates a new http.Handler for the delete room operation
func NewDeleteRoom(ctx *middleware.Context, handler DeleteRoomHandler) *DeleteRoom {
	return &DeleteRoom{Context: ctx, Handler: handler}
}

/*
	DeleteRoom swagger:route DELETE /room/{roomID} deleteRoom

DeleteRoom delete room API
*/
type DeleteRoom struct {
	Context *middleware.Context
	Handler DeleteRoomHandler
}

func (o *DeleteRoom) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteRoomParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
