// Code generated by go-swagger; DO NOT EDIT.

package bookings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListBookingsByDateTimeHandlerFunc turns a function with the right signature into a list bookings by date time handler
type ListBookingsByDateTimeHandlerFunc func(ListBookingsByDateTimeParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListBookingsByDateTimeHandlerFunc) Handle(params ListBookingsByDateTimeParams) middleware.Responder {
	return fn(params)
}

// ListBookingsByDateTimeHandler interface for that can handle valid list bookings by date time params
type ListBookingsByDateTimeHandler interface {
	Handle(ListBookingsByDateTimeParams) middleware.Responder
}

// NewListBookingsByDateTime creates a new http.Handler for the list bookings by date time operation
func NewListBookingsByDateTime(ctx *middleware.Context, handler ListBookingsByDateTimeHandler) *ListBookingsByDateTime {
	return &ListBookingsByDateTime{Context: ctx, Handler: handler}
}

/*
	ListBookingsByDateTime swagger:route GET /bookings/{userID}/{dateTime} bookings listBookingsByDateTime

Retrieve bookings for a user based on a datetime
*/
type ListBookingsByDateTime struct {
	Context *middleware.Context
	Handler ListBookingsByDateTimeHandler
}

func (o *ListBookingsByDateTime) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewListBookingsByDateTimeParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
