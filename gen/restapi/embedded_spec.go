// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Travel Booking Portal API (Microservices)",
    "title": "Travel Booking Portal",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/booking": {
      "get": {
        "operationId": "GetBookings",
        "responses": {
          "200": {
            "description": "List of bookings retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Booking"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "operationId": "UpdateBooking",
        "parameters": [
          {
            "description": "Booking object to update",
            "name": "booking",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Booking updated successfully",
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          },
          "404": {
            "description": "Booking not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "operationId": "CreateBooking",
        "parameters": [
          {
            "description": "Booking object to create ",
            "name": "booking",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Booking added successfully",
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          },
          "409": {
            "description": "Booking already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/booking/confirmed": {
      "get": {
        "operationId": "ConfirmedBooking",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the user for whom confirmed bookings are retrieved",
            "name": "userID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of confirmed bookings retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Booking"
              }
            }
          },
          "404": {
            "description": "No confirmed bookings found for the specified user"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/booking/search": {
      "get": {
        "operationId": "SearchBooking",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the User to search bookings for",
            "name": "userID",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Date string to search for bookings (e.g., '2023-10-27')",
            "name": "dateString",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Bookings retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Booking"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Bookings not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/booking/user/{userID}": {
      "get": {
        "operationId": "AllBookings",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the user for whom all bookings are retrieved",
            "name": "userID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of all bookings retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Booking"
              }
            }
          },
          "404": {
            "description": "No confirmed bookings found for the specified user"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/booking/{bookingID}": {
      "get": {
        "operationId": "GetBooking",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the booking to retrieve",
            "name": "bookingID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Booking retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          },
          "404": {
            "description": "Booking not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "operationId": "DeleteBooking",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the booking to delete",
            "name": "bookingID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Booking deleted successfully"
          },
          "404": {
            "description": "Booking not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/car": {
      "get": {
        "operationId": "GetCars",
        "responses": {
          "200": {
            "description": "List of Cars retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CarRental"
              }
            }
          },
          "404": {
            "description": "Cars not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "operationId": "UpdateCar",
        "parameters": [
          {
            "description": "CarRental object toupdate",
            "name": "car",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarRental"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CarRental updated successfully",
            "schema": {
              "$ref": "#/definitions/CarRental"
            }
          },
          "404": {
            "description": "CarRental not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "operationId": "CreateCar",
        "parameters": [
          {
            "description": "CarRental object to create",
            "name": "car",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarRental"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CarRental added successfully",
            "schema": {
              "$ref": "#/definitions/CarRental"
            }
          },
          "409": {
            "description": "CarRental already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/car/{carID}": {
      "get": {
        "operationId": "GetCar",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the Car to retrieve",
            "name": "carID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Car retrieved successfully",
            "schema": {
              "$ref": "#/definitions/CarRental"
            }
          },
          "404": {
            "description": "Car not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "operationId": "DeleteCar",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the Car to delete",
            "name": "carID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Car deleted successfully"
          },
          "404": {
            "description": "Car not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hotel": {
      "get": {
        "operationId": "GetHotels",
        "responses": {
          "200": {
            "description": "List of Hotels retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Hotel"
              }
            }
          },
          "404": {
            "description": "Hotels not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "operationId": "UpdateHotel",
        "parameters": [
          {
            "description": "Hotel object to  update",
            "name": "hotel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Hotel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Hotel updated successfully",
            "schema": {
              "$ref": "#/definitions/Hotel"
            }
          },
          "404": {
            "description": "Hotel not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "operationId": "CreateHotel",
        "parameters": [
          {
            "description": "Hotel object to create",
            "name": "hotel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Hotel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Hotel added successfully",
            "schema": {
              "$ref": "#/definitions/Hotel"
            }
          },
          "409": {
            "description": "Hotel already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hotel/{ID}/rooms": {
      "get": {
        "operationId": "getRoomsOfHotel",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the hotel",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "rooms in response",
            "schema": {
              "$ref": "#/definitions/Room"
            }
          },
          "404": {
            "description": "Rooms not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/hotel/{hotelID}": {
      "get": {
        "operationId": "GetHotel",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the Hotel to retrieve",
            "name": "hotelID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Hotel retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Hotel"
            }
          },
          "404": {
            "description": "Hotel not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "operationId": "DeleteHotel",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the Hotel to delete",
            "name": "hotelID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Hotel deleted successfully"
          },
          "404": {
            "description": "Hotel not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/room": {
      "get": {
        "operationId": "GetRooms",
        "responses": {
          "200": {
            "description": "List of Rooms retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Room"
              }
            }
          },
          "404": {
            "description": "Rooms not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "operationId": "UpdateRoom",
        "parameters": [
          {
            "description": "Room object to  update",
            "name": "room",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Room"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Room updated successfully",
            "schema": {
              "$ref": "#/definitions/Room"
            }
          },
          "404": {
            "description": "Room not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "operationId": "CreateRoom",
        "parameters": [
          {
            "description": "Room object to create",
            "name": "room",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Room"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Room added successfully",
            "schema": {
              "$ref": "#/definitions/Room"
            }
          },
          "409": {
            "description": "Room already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/room/{roomID}": {
      "get": {
        "operationId": "GetRoom",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the Room to retrieve",
            "name": "roomID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Room retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Room"
            }
          },
          "404": {
            "description": "Room not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "operationId": "DeleteRoom",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the Room to delete",
            "name": "roomID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Room deleted successfully"
          },
          "404": {
            "description": "Room not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/service/{ServiceID}/booking": {
      "get": {
        "operationId": "GetServiceBookings",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the service to retrieve bookings",
            "name": "ServiceID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Start date for filtering bookings",
            "name": "FromDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "End date for filtering bookings",
            "name": "ToDate",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of bookings for the service retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Booking"
              }
            }
          },
          "404": {
            "description": "Service not found or no bookings found for the service"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user": {
      "get": {
        "operationId": "GetUsers",
        "responses": {
          "200": {
            "description": "List of Users retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "operationId": "UpdateUser",
        "parameters": [
          {
            "description": "User object to update",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User updated successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "operationId": "CreateUser",
        "parameters": [
          {
            "description": "User object to create ",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User added successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "409": {
            "description": "User already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{userID}": {
      "get": {
        "operationId": "GetUser",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the user to retrieve",
            "name": "userID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user retrieved successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "operationId": "DeleteUser",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the USer to delete",
            "name": "userID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "USer not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Booking": {
      "type": "object",
      "properties": {
        "confirmed": {
          "type": "boolean"
        },
        "from_date": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer"
        },
        "paid": {
          "type": "boolean"
        },
        "penalty": {
          "type": "boolean"
        },
        "service_id": {
          "type": "integer"
        },
        "service_type": {
          "type": "string"
        },
        "to_date": {
          "type": "string",
          "format": "date-time"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "CarRental": {
      "type": "object",
      "properties": {
        "booked": {
          "type": "boolean"
        },
        "id": {
          "type": "integer"
        }
      }
    },
    "Hotel": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "rooms": {
          "type": "integer"
        }
      }
    },
    "Room": {
      "type": "object",
      "properties": {
        "hotel_id": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "number": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Travel Booking Portal API (Microservices)",
    "title": "Travel Booking Portal",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/booking": {
      "get": {
        "operationId": "GetBookings",
        "responses": {
          "200": {
            "description": "List of bookings retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Booking"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "operationId": "UpdateBooking",
        "parameters": [
          {
            "description": "Booking object to update",
            "name": "booking",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Booking updated successfully",
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          },
          "404": {
            "description": "Booking not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "operationId": "CreateBooking",
        "parameters": [
          {
            "description": "Booking object to create ",
            "name": "booking",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Booking added successfully",
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          },
          "409": {
            "description": "Booking already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/booking/confirmed": {
      "get": {
        "operationId": "ConfirmedBooking",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the user for whom confirmed bookings are retrieved",
            "name": "userID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of confirmed bookings retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Booking"
              }
            }
          },
          "404": {
            "description": "No confirmed bookings found for the specified user"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/booking/search": {
      "get": {
        "operationId": "SearchBooking",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the User to search bookings for",
            "name": "userID",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Date string to search for bookings (e.g., '2023-10-27')",
            "name": "dateString",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Bookings retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Booking"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Bookings not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/booking/user/{userID}": {
      "get": {
        "operationId": "AllBookings",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the user for whom all bookings are retrieved",
            "name": "userID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of all bookings retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Booking"
              }
            }
          },
          "404": {
            "description": "No confirmed bookings found for the specified user"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/booking/{bookingID}": {
      "get": {
        "operationId": "GetBooking",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the booking to retrieve",
            "name": "bookingID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Booking retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Booking"
            }
          },
          "404": {
            "description": "Booking not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "operationId": "DeleteBooking",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the booking to delete",
            "name": "bookingID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Booking deleted successfully"
          },
          "404": {
            "description": "Booking not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/car": {
      "get": {
        "operationId": "GetCars",
        "responses": {
          "200": {
            "description": "List of Cars retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CarRental"
              }
            }
          },
          "404": {
            "description": "Cars not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "operationId": "UpdateCar",
        "parameters": [
          {
            "description": "CarRental object toupdate",
            "name": "car",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarRental"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CarRental updated successfully",
            "schema": {
              "$ref": "#/definitions/CarRental"
            }
          },
          "404": {
            "description": "CarRental not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "operationId": "CreateCar",
        "parameters": [
          {
            "description": "CarRental object to create",
            "name": "car",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarRental"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CarRental added successfully",
            "schema": {
              "$ref": "#/definitions/CarRental"
            }
          },
          "409": {
            "description": "CarRental already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/car/{carID}": {
      "get": {
        "operationId": "GetCar",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the Car to retrieve",
            "name": "carID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Car retrieved successfully",
            "schema": {
              "$ref": "#/definitions/CarRental"
            }
          },
          "404": {
            "description": "Car not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "operationId": "DeleteCar",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the Car to delete",
            "name": "carID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Car deleted successfully"
          },
          "404": {
            "description": "Car not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hotel": {
      "get": {
        "operationId": "GetHotels",
        "responses": {
          "200": {
            "description": "List of Hotels retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Hotel"
              }
            }
          },
          "404": {
            "description": "Hotels not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "operationId": "UpdateHotel",
        "parameters": [
          {
            "description": "Hotel object to  update",
            "name": "hotel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Hotel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Hotel updated successfully",
            "schema": {
              "$ref": "#/definitions/Hotel"
            }
          },
          "404": {
            "description": "Hotel not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "operationId": "CreateHotel",
        "parameters": [
          {
            "description": "Hotel object to create",
            "name": "hotel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Hotel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Hotel added successfully",
            "schema": {
              "$ref": "#/definitions/Hotel"
            }
          },
          "409": {
            "description": "Hotel already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hotel/{ID}/rooms": {
      "get": {
        "operationId": "getRoomsOfHotel",
        "parameters": [
          {
            "type": "integer",
            "description": "The ID of the hotel",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "rooms in response",
            "schema": {
              "$ref": "#/definitions/Room"
            }
          },
          "404": {
            "description": "Rooms not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/hotel/{hotelID}": {
      "get": {
        "operationId": "GetHotel",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the Hotel to retrieve",
            "name": "hotelID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Hotel retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Hotel"
            }
          },
          "404": {
            "description": "Hotel not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "operationId": "DeleteHotel",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the Hotel to delete",
            "name": "hotelID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Hotel deleted successfully"
          },
          "404": {
            "description": "Hotel not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/room": {
      "get": {
        "operationId": "GetRooms",
        "responses": {
          "200": {
            "description": "List of Rooms retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Room"
              }
            }
          },
          "404": {
            "description": "Rooms not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "operationId": "UpdateRoom",
        "parameters": [
          {
            "description": "Room object to  update",
            "name": "room",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Room"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Room updated successfully",
            "schema": {
              "$ref": "#/definitions/Room"
            }
          },
          "404": {
            "description": "Room not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "operationId": "CreateRoom",
        "parameters": [
          {
            "description": "Room object to create",
            "name": "room",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Room"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Room added successfully",
            "schema": {
              "$ref": "#/definitions/Room"
            }
          },
          "409": {
            "description": "Room already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/room/{roomID}": {
      "get": {
        "operationId": "GetRoom",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the Room to retrieve",
            "name": "roomID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Room retrieved successfully",
            "schema": {
              "$ref": "#/definitions/Room"
            }
          },
          "404": {
            "description": "Room not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "operationId": "DeleteRoom",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the Room to delete",
            "name": "roomID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Room deleted successfully"
          },
          "404": {
            "description": "Room not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/service/{ServiceID}/booking": {
      "get": {
        "operationId": "GetServiceBookings",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the service to retrieve bookings",
            "name": "ServiceID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Start date for filtering bookings",
            "name": "FromDate",
            "in": "query"
          },
          {
            "type": "string",
            "description": "End date for filtering bookings",
            "name": "ToDate",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of bookings for the service retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Booking"
              }
            }
          },
          "404": {
            "description": "Service not found or no bookings found for the service"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user": {
      "get": {
        "operationId": "GetUsers",
        "responses": {
          "200": {
            "description": "List of Users retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "operationId": "UpdateUser",
        "parameters": [
          {
            "description": "User object to update",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User updated successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "operationId": "CreateUser",
        "parameters": [
          {
            "description": "User object to create ",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User added successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "409": {
            "description": "User already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{userID}": {
      "get": {
        "operationId": "GetUser",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the user to retrieve",
            "name": "userID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "user retrieved successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "operationId": "DeleteUser",
        "parameters": [
          {
            "type": "integer",
            "description": "ID of the USer to delete",
            "name": "userID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "USer not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Booking": {
      "type": "object",
      "properties": {
        "confirmed": {
          "type": "boolean"
        },
        "from_date": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer"
        },
        "paid": {
          "type": "boolean"
        },
        "penalty": {
          "type": "boolean"
        },
        "service_id": {
          "type": "integer"
        },
        "service_type": {
          "type": "string"
        },
        "to_date": {
          "type": "string",
          "format": "date-time"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "CarRental": {
      "type": "object",
      "properties": {
        "booked": {
          "type": "boolean"
        },
        "id": {
          "type": "integer"
        }
      }
    },
    "Hotel": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "rooms": {
          "type": "integer"
        }
      }
    },
    "Room": {
      "type": "object",
      "properties": {
        "hotel_id": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "number": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    }
  }
}`))
}
